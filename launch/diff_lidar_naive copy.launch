<launch>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find depth_gazebo)/worlds/mapping3.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="verbose" value="true"/>
    </include>


    <arg name="rviz_conf_file" default="$(find depth_gazebo)/rviz/diff_naive.rviz" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_conf_file)" />

    <param name="robot_description" command="$(find xacro)/xacro $(find depth_gazebo)/urdf/diff_robot_lidar.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>
    <node name="my_robot_model_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -param robot_description -model my_robot_model -x 0 -y 0 -z 0"/>

    <!-- remove ground plane from point cloud -->
    <node name="pcl_ground_removal" pkg="depth_gazebo" type="pcl_proccessing"/>
    <!-- add gaussian noise to pointcloud -->
    <node name="rgbd_add_noise" pkg="depth_gazebo" type="rgbd_noise"/>
    <!-- add gaussian noise to depthimage -->
    <node name="depthimage_add_noise" pkg="depth_gazebo" type="depthimage_noise"/>
    
    <!-- map bayes binary static filter -->
    <node name="mapping_node" pkg="depth_gazebo" type="occupancy_grid.py" output="screen"/>
    <!-- remove NaN and +inf & -inf from laserscan msg -->
    <node name="scan_filter_node" pkg="depth_gazebo" type="scan_filter.py"/>

    <!-- 1. Provide  ground truth GAZEBO odom -> base_link transform -->
    <!-- <node name="tf2_world_to_base_link" pkg="depth_gazebo" type="world_to_base_link_broadcaster.py"/> -->
    <!-- 2. AMCL for provide  map -> odom  transform -->
    <include file="$(find depth_gazebo)/launch/amcl_diff.launch">
        <arg name="x_init_value" value="0.0"/>
        <arg name="y_init_value" value="0.0"/>
        <arg name="a_init_value" value="0.0"/>
    </include>

    <!-- provide depth_image -> laserscan msg -->
    <include file="$(find depth_gazebo)/launch/depth_to_laserscan.launch"/>

    <!-- DEBUG -->
    <node pkg="rqt_graph" type="rqt_graph" name="rqt_graph" output="screen"/>
    <node pkg="rqt_tf_tree" type="rqt_tf_tree" name="rqt_tf_tree" output="screen"/>
</launch>